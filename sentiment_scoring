#SENTIMENT SCORING
setwd("D:/Syntax/kamus")

#Input Kamus Sentimen
senti <- read.delim("sentiwords_id.txt", sep=":", header = FALSE) %>%
  mutate(words = as.character(V1), score = as.numeric(V2)) %>%
  select(c("words","score"))

#Input Kamus Booster
booster <- read.delim("boosterwords_id.txt", sep=":", header = FALSE) %>%
  mutate(words = as.character(V1), score = as.numeric(V2)) %>%
  select(c("words","score"))

#Pelabelan Sentiment Scoring
setwd("D:/Syntax")
kalimat <- read.csv("prep_normalisasi.csv",header=TRUE)
scores.sentiment <- function(kalimat, senti, .progress='none') { 
  require(plyr) 
  require(stringr)
  scores <-	laply(kalimat, function(teks, senti) { 
    list.words <- str_split(teks, '\\s+')
    words <- unlist(list.words)
    word.matches <- match(words,  senti$words)
    prev.word <- words[which(!is.na(word.matches))-1] 
    next.word <- words[which(!is.na(word.matches))+1] 
    true.match <- c(words[which(!is.na(word.matches))]) 
    word.check <- if(length(prev.word) == 0){
      senti[senti$words %in% true.match, "score"]
    }else if(prev.word %in% booster$words | next.word %in% booster$words & senti[senti$words %in% true.match, "score"] > 0){
      senti[senti$words %in% true.match , "score"] + booster[booster$words %in% words, "score"]
    }else if(prev.word %in% booster$words | next.word %in% booster$words & senti[senti$words %in% true.match, "score"] < 0){
      senti[senti$words %in% true.match , "score"] - booster[booster$words %in% words, "score"]
    }else if(c(words[which(!is.na(word.matches))]) %in% senti$words){
      senti[senti$words %in% true.match, "score"]
    }else{ 0
    }
    score <- sum(word.check) 
    return(score)
  }, senti, .progress=.progress)
  scores.df <- data.frame(score=scores, text=kalimat) 
  return(scores.df)
}
results = scores.sentiment(prep_normalisasi$text, senti)
set.seed(50) 

#Convert to sentiment classes
results$class <- as.factor(ifelse(results$score<0, "Negatif","Positif"))
resultsclass <- subset(results, select = c("text","class"))
df.results <- data.frame(text=sapply(results, as.character), stringsAsFactors = FALSE)
write.csv(df.results, file = "Sentiments_Scoring_tes.csv")
